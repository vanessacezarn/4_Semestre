# -*- coding: utf-8 -*-
"""atividade_ru_ufrgs.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pA5HIdrnz9rrXs91aKCv-jjqloCU7NQW
"""

"""
Atividade aula 4 - Restaurante Universitário da UFRGS - validação do cartão e desconto de 1 credito por refeição
- Implementar um modelo discreto por eventos para o fluxo de entrada no RU.
- Consolidar o uso de listas/dicionários, funções e manipulação de estado do sistema.
- Produzir saídas claras para análise e validação
"""
# aluno é uma lista de dicionarios que armazena o número da matricula, o nome e quantidade de créditos de cada usuário
aluno = [{"matricula":"UFRGS2025001", "nome":"vanessa c","creditos":7},
         {"matricula":"UFRGS2025002", "nome":"luiza k","creditos":2},
         {"matricula":"UFRGS2025003", "nome":"eric m","creditos":0}]
# ru é uma lista de dicionario que armazena o nome do RU, a quantidade total de atendimentos realizados e a quantidade total de atendimento negados por falta de créditos
ru=[{"nome":"RU1", "total_atendimentos":0, "total_negados_sem_credito":0}]

print('\t *** DADOS INICIAS ***')
print('Lista de alunos:')
for a in aluno:
  print(a)
print('Lista de RU')
for r in ru:
  print(r)
print('-----------------------------------------------------')


def encontra_aluno(matricula):
  """
  Encontra um aluno na lista de alunos com base no numero da matricula

  Args:
      matricula (int): matriculo do aluno
  Returns:
      se a matricula for encontrada, retorna os dados aluno
      se a matricula não for encontrada, retorna None
  """
  for a in aluno:
    if a['matricula'] == matricula:
        return a
  return None

def usar_refeicao(matricula):
  """
  Verificação e utilização de creditos para refeição
    Verifica se o usuario existe na lista de alunos
    Se tiver créditos disponiveis, autoriza a entrada, desconta um credito e atualiza o total de atendimentos
    Se não tiver créditos disponiveis, nega a entrada, informa a falta de credito e sugere uma recarga e atualiza o total de atendimentos negados por falta de créditos
  Args:
      matricula (int): matriculo do aluno
  """
  usuario = encontra_aluno(matricula)
  if usuario:
    if usuario['creditos'] >= 1:
      usuario['creditos'] -= 1
      for r in ru:
        r['total_atendimentos'] += 1
      print(f'Entrada "LIBERADA" para o usuario {matricula}')
    elif usuario['creditos'] == 0:
      for r in ru:
        r['total_negados_sem_credito'] += 1
      print(f'Entrada "NEGADA", créditos insuficiente, para o usuario {matricula}. Realize uma recarga!!!')

  else:
    print(f'Usuario {matricula} não encontrado')


print('\t*** SIMULAÇÃO DE EVENTOS ***')
usar_refeicao('UFRGS2025001')
usar_refeicao('UFRGS2025004')
usar_refeicao('UFRGS2025002')
usar_refeicao('UFRGS2025003')
print('-----------------------------------------------------')
print('\t*** RELATÓRIO FINAL ***')
for r in ru:
  print(f'Total de atendimentos liberados: {r["total_atendimentos"]}')
  print(f'Total de atendimentos negados por falta de créditos: {r["total_negados_sem_credito"]}')
print('Créditos remanescentes de cada aluno')
for a in aluno:
  print(f'Aluno: {a["matricula"]} | Créditos : {a["creditos"]}')
print('-------')

