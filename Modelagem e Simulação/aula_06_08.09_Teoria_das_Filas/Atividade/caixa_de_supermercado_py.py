# -*- coding: utf-8 -*-
"""caixa_de_supermercado.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fzy99U9_recd7-trNSN5Zm_p-XrCoY2W
"""

import numpy as np
import matplotlib.pyplot as plt

# ENTRADA DE DADOS
servico = 'Caixa de Supermercado'
horario_atendimento = '30 minutos entre o 18:30h e as 19h'
total_servidores = 9
chegadas_minuto = [2,3,2,2,4,1,0,4,2,3,
                   5,4,4,2,2,3,4,2,1,1,
                   2,1,3,3,2,1,0,0,1,2,]
tempo_por_atendimento = [3.5, 5, 4, 3.2, 6.6, 2, 0, 8, 3.5, 5,
                         10, 6.8, 7.5, 3.8, 4.2, 4.6, 7, 3.4, 2, 1.8,
                         3.6, 1.3, 4, 6.5, 3.9, 2.5, 0, 0, 3.6, 5]
# CALCULOS
lambd =  sum(chegadas_minuto) / len(chegadas_minuto)
tempo_medio_atendimento = sum(tempo_por_atendimento) / len(tempo_por_atendimento)
mi = 1/ tempo_medio_atendimento
rho = lambd / (total_servidores * mi)

# SAIDA
print(f'ANÁLISES DE FILA DO SERVIÇO: {servico}')
print(f'HORÁRIO DE ATENDIMENTO: {horario_atendimento} ')
print('---------------------------------------------------')

print('\n\tDADOS COLETADOS')
print(f'Total de chegadas nos 30 minutos:  {sum(chegadas_minuto)}')
print(f'Número de servidores: {total_servidores}')
print(f'Tempo medio de atendimento: {tempo_medio_atendimento}')
print('---------------------------------------------------')

print('\tCALCULOS')
print(f'Taxa de chegada (λ) : {lambd}')
print(f'Taxa de atendimento (μ) : {mi}')
print(f'Taxa de ocupação (ρ) : {rho}')
print('---------------------------------------------------')

print('\tINTERPRETAÇÃO')
if(rho<0.5):
  print('Sistema está subutilizado')
  print('Considere reduzir pessoal')
elif(rho>0.5 and rho<0.8):
  print('Sistema está eficiente')
  print('Mantenha a atual configuração do sistema')
elif(rho>0.8 and rho<1):
  print('Sistema está no limite')
  print('Adicione mais funcionarios')
else:
  print('Sistema está em colapso')
  print('Precisa-se urgentemente de novos funcionarios')
print('---------------------------------------------------')

print('\tGRAFICOS')
# chegadas por minuto
plt.figure(figsize=(8, 3))
plt.subplot(1, 2, 1)
plt.bar(range(len(chegadas_minuto)), chegadas_minuto, color='skyblue')
plt.title('Chegadas por Minuto')
plt.xlabel('Minuto')
plt.ylabel('Número de Chegadas')

bins = np.arange(0, 12, 1)
plt.figure(figsize=(8, 3))
plt.hist(tempo_por_atendimento, bins=bins, color='lightcoral', edgecolor='black', alpha=0.7)
plt.title('Distribuição do Tempo de Atendimento', fontsize=14)
plt.xlabel('Tempo de Atendimento (minutos)', fontsize=12)
plt.ylabel('Frequência', fontsize=12)
plt.grid(True, linestyle='--', alpha=0.6)
plt.tight_layout()
plt.show()